{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1jEr98tWyJxxHWdjCtghmshKBo92uOfL7","timestamp":1704721577411}],"authorship_tag":"ABX9TyMEblcn/j9yqBCZxRVA6wM3"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"F4LejLwoFok2"},"outputs":[],"source":["from keras.datasets import imdb\n","from keras.preprocessing.sequence import pad_sequences\n","from keras.models import Sequential\n","from keras.layers import Dense,Flatten,Dropout,Embedding,SpatialDropout1D,SimpleRNN\n","from keras.callbacks import ModelCheckpoint\n","from sklearn.metrics import roc_auc_score,roc_curve\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","from keras.preprocessing.text import one_hot\n","from keras.preprocessing.sequence import pad_sequences\n"]},{"cell_type":"code","source":["reviews = [\n","    \"Great product and exceeded expectations\",\n","    \"Disappointing quality and not worth the price\",\n","    \"Quick delivery and very satisfied\",\n","    \"Average experience and nothing remarkable\",\n","    \"Excellent service and highly recommend\",\n","    \"Product flaws and needs improvement\",\n","    \"Easy to use and user-friendly design\",\n","    \"Terrible customer support and frustrating experience\",\n","    \"Impressive features and value for money\",\n","    \"Lacks durability and not recommended\"\n","]\n","\n","\n","ratings = np.array([1, 0, 1, 0, 1, 0, 1, 0, 1, 0])"],"metadata":{"id":"XyG6EPq9Nc1F"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["vocab_size = 50\n","embedding_dim = 5\n","input_length = 5"],"metadata":{"id":"LcVTmL84TqhV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["encoding_reviews = [print(one_hot(i,vocab_size)) for i in reviews]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e7aTKDqpaSiY","executionInfo":{"status":"ok","timestamp":1704781499548,"user_tz":-330,"elapsed":15,"user":{"displayName":"navin shrivatsan","userId":"02096111809868742973"}},"outputId":"8663d5ab-3546-4a43-f7de-7b265576b5c3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[17, 13, 12, 3, 29]\n","[45, 32, 12, 36, 28, 30, 5]\n","[2, 8, 12, 5, 11]\n","[37, 29, 12, 27, 13]\n","[36, 28, 12, 13, 38]\n","[13, 36, 12, 18, 18]\n","[20, 14, 7, 12, 30, 23, 11]\n","[45, 42, 35, 12, 23, 29]\n","[18, 32, 12, 7, 24, 37]\n","[1, 28, 12, 36, 8]\n"]}]},{"cell_type":"code","source":["sequences = pad_sequences(encoding_reviews,maxlen=input_length)"],"metadata":{"id":"fMni7DyBa3Ju","executionInfo":{"status":"error","timestamp":1704781500866,"user_tz":-330,"elapsed":1329,"user":{"displayName":"navin shrivatsan","userId":"02096111809868742973"}},"outputId":"35e39f74-b662-405c-fe91-c799b85a81f7","colab":{"base_uri":"https://localhost:8080/","height":442}},"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"`sequences` must be a list of iterables. Found non-iterable: None","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/keras/src/utils/data_utils.py\u001b[0m in \u001b[0;36mpad_sequences\u001b[0;34m(sequences, maxlen, dtype, padding, truncating, value)\u001b[0m\n\u001b[1;32m   1096\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1097\u001b[0;31m             \u001b[0mlengths\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1098\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mflag\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: object of type 'NoneType' has no len()","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-f0176cc3eca4>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msequences\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpad_sequences\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mencoding_reviews\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mmaxlen\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minput_length\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/keras/src/utils/data_utils.py\u001b[0m in \u001b[0;36mpad_sequences\u001b[0;34m(sequences, maxlen, dtype, padding, truncating, value)\u001b[0m\n\u001b[1;32m   1100\u001b[0m                 \u001b[0mflag\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1101\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1102\u001b[0;31m             raise ValueError(\n\u001b[0m\u001b[1;32m   1103\u001b[0m                 \u001b[0;34m\"`sequences` must be a list of iterables. \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1104\u001b[0m                 \u001b[0;34mf\"Found non-iterable: {str(x)}\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: `sequences` must be a list of iterables. Found non-iterable: None"]}]},{"cell_type":"code","source":["modal2 = Sequential()\n","\n","modal2.add(Embedding(input_dim=vocab_size, output_dim=embedding_dim, input_length=input_length,name='embedding'))\n","modal2.add(Flatten())\n","modal2.add(Dense(1,activation='sigmoid'))\n","modal2.summary()"],"metadata":{"id":"XGbpZi-SR7QO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["modal2.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])"],"metadata":{"id":"FDPrrqOzTu_m"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x=sequences\n","y=ratings"],"metadata":{"id":"JwxlIw98bcYO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["modal2.fit(x,y,epochs=7,verbose=0)"],"metadata":{"id":"vV5ICeRnVS7n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["loss,accuracy = modal2.evaluate(x,y)"],"metadata":{"id":"VAkcT_lsbwEW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["weight = modal2.get_layer('embedding').get_weights()[0]\n","len(weight)"],"metadata":{"id":"ar8GatEucFOO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["weight[25]"],"metadata":{"id":"zqFTHozbdeBO"},"execution_count":null,"outputs":[]}]}